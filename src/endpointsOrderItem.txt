# OrderItem API Endpoints Documentation

## 1. Получение информации обо всех элементах заказа
- **Описание**: Этот эндпоинт позволяет получить информацию обо всех элементах заказа.
- **Путь**: `GET /api/v1/orderItems`
- **Параметры**: нет
- **Ответ в случае успеха**:
  ```json
  [
    {
      "id": 1,
      "orderId": 1,
      "productId": 1,
      "quantity": 2
    },
    {
      "id": 2,
      "orderId": 1,
      "productId": 2,
      "quantity": 1
    }
  ]
  ```

## 2. Получение всех элементов заказа по идентификатору заказа
- **Описание**: Этот эндпоинт позволяет получить все элементы заказа по его идентификатору.
- **Путь**: `GET /api/v1/orderItems/order/{orderId}`
- **Параметры**:
  - `orderId` (число, обязательный) - идентификатор заказа
- **Ответ в случае успеха**:
  ```json
  [
    {
      "id": 1,
      "orderId": 1,
      "productId": 1,
      "quantity": 2
    },
    {
      "id": 2,
      "orderId": 1,
      "productId": 2,
      "quantity": 1
    }
  ]
  ```

## 3. Получение всех элементов заказа по идентификатору продукта
- **Описание**: Этот эндпоинт позволяет получить все элементы заказа по идентификатору продукта.
- **Путь**: `GET /api/v1/orderItems/product/{productId}`
- **Параметры**:
  - `productId` (число, обязательный) - идентификатор продукта
- **Ответ в случае успеха**:
  ```json
  [
    {
      "id": 1,
      "orderId": 1,
      "productId": 1,
      "quantity": 2
    },
    {
      "id": 3,
      "orderId": 2,
      "productId": 1,
      "quantity": 1
    }
  ]
  ```

## 4. Получение элемента заказа по идентификатору заказа и продукта
- **Описание**: Этот эндпоинт позволяет получить элемент заказа по идентификатору заказа и продукта.
- **Путь**: `GET /api/v1/orderItems/order/{orderId}/product/{productId}`
- **Параметры**:
  - `orderId` (число, обязательный) - идентификатор заказа
  - `productId` (число, обязательный) - идентификатор продукта
- **Ответ в случае успеха**:
  ```json
  {
    "id": 1,
    "orderId": 1,
    "productId": 1,
    "quantity": 2
  }
  ```
- **Ответ в случае, если запись не найдена**:
  ```json
  {
    "status": 404,
    "error": "Not Found"
  }
  ```

## 5. Создание элемента заказа
- **Описание**: Этот эндпоинт позволяет создать новый элемент заказа.
- **Путь**: `POST /api/v1/orderItems`
- **Параметры**: нет
- **RequestBody**:
  - `orderId` (число, обязательный) - идентификатор заказа
  - `productId` (число, обязательный) - идентификатор продукта
  - `quantity` (число, обязательный) - количество продукта
- **Ответ в случае успеха**:
  ```json
  {
    "id": 1,
    "orderId": 1,
    "productId": 1,
    "quantity": 2
  }
  ```

Вот дополненная документация для методов обновления и удаления элемента заказа:

```markdown
## 6. Обновление элемента заказа по идентификатору заказа и продукта
- **Описание**: Этот эндпоинт позволяет обновить данные существующего элемента заказа по его идентификатору заказа и продукта.
- **Путь**: `PUT /api/v1/orderItems/order/{orderId}/product/{productId}`
- **Параметры**:
  - `orderId` (число, обязательный) - идентификатор заказа
  - `productId` (число, обязательный) - идентификатор продукта
- **RequestBody**:
  - `quantity` (число, обязательный) - количество продукта
- **Ответ в случае успеха**:
  ```json
  {
    "id": 1,
    "orderId": 1,
    "productId": 1,
    "quantity": 3
  }
  ```
- **Ответ в случае, если запись не найдена**:
  ```json
  {
    "status": 404,
    "error": "Not Found"
  }
  ```

## 7. Удаление элемента заказа по идентификатору заказа и продукта
- **Описание**: Этот эндпоинт позволяет удалить элемент заказа по его идентификатору заказа и продукта.
- **Путь**: `DELETE /api/v1/orderItems/order/{orderId}/product/{productId}`
- **Параметры**:
  - `orderId` (число, обязательный) - идентификатор заказа
  - `productId` (число, обязательный) - идентификатор продукта
- **Ответ в случае успеха**:
  ```json
  {
    "status": 204,
    "message": "No Content"
  }
  ```
- **Ответ в случае, если запись не найдена**:
  ```json
  {
    "status": 404,
    "error": "Not Found"
  }
