# Customer API Endpoints Documentation

## 1. Получение информации обо всех клиентах
- **Описание**: Этот эндпоинт позволяет получить информацию обо всех клиентах.
- **Путь**: `GET /api/v1/customers`
- **Параметры**: нет
- **Ответ в случае успеха**:
  ```json
  [
    {
      "id": 1,
      "firstName": "John",
      "lastName": "Doe",
      "address": "Belarus, Minsk"
      "email": "john.doe@example.com",
      "phone": "+123456789"
    },
    {
      "id": 2,
      "firstName": "Jane",
      "lastName": "Smith",
      "address": "Belarus, Minsk"
      "email": "jane.smith@example.com",
      "phone": "+987654321"
    }
  ]
  ```

## 2. Получение информации о клиенте по идентификатору
- **Описание**: Этот эндпоинт позволяет получить информацию о конкретном клиенте по его идентификатору.
- **Путь**: `GET /api/v1/customers/{id}`
- **Параметры**:
  - `id` (число, обязательный) - идентификатор клиента
- **Ответ в случае успеха**:
  ```json
  {
    "id": 1,
      "firstName": "John",
      "lastName": "Doe",
      "address": "Belarus, Minsk"
      "email": "john.doe@example.com",
      "phone": "+123456789"
  }
  ```
- **Ответ в случае, если запись не найдена**:
  ```json
  {
    "status": 404,
    "error": "Not Found"
  }
  ```

## 3. Получение всех заказов клиента по идентификатору клиента
- **Описание**: Этот эндпоинт позволяет получить все заказы, сделанные конкретным клиентом по его идентификатору.
- **Путь**: `GET /api/v1/customers/{id}/orders`
- **Параметры**:
  - `id` (число, обязательный) - идентификатор клиента
- **Ответ в случае успеха**:
  ```json
  [
      {
          "id": 1,
          "date": "2024-05-11",
          "customerId": 1,
          "status": "CHECKOUT"
      },
      {
          "id": 2,
          "date": "2024-05-11",
          "customerId": 1,
          "status": "FULFILLED"
      },
      {
          "id": 3,
          "date": "2024-05-11",
          "customerId": 1,
          "status": "FULFILLED"
      }
  ]
  ```
- **Ответ в случае, если запись не найдена**:
  ```json
  {
    "status": 404,
    "error": "Not Found"
  }
  ```

## 4. Создание записи клиента
- **Описание**: Этот эндпоинт позволяет создать новую запись клиента.
- **Путь**: `POST /api/v1/customers`
- **Параметры**: нет
- **RequestBody**:
  - `name` (строка, обязательный) - имя клиента
  - `email` (строка, обязательный) - электронная почта клиента
  - `phone` (строка, обязательный) - телефон клиента
- **Ответ в случае успеха**:
  ```json
  {
    "id": 1,
    "firstName": "John",
    "lastName": "Doe",
    "address": "Belarus, Minsk"
    "email": "john.doe@example.com",
    "phone": "+123456789"
  }
  ```

## 5. Обновление данных клиента по идентификатору
- **Описание**: Этот эндпоинт позволяет изменить данные существующей записи клиента по его идентификатору.
- **Путь**: `PUT /api/v1/customers/{id}`
- **Параметры**:
  - `id` (число, обязательный) - идентификатор клиента
- **RequestBody**:
  - `name` (строка, обязательный) - имя клиента
  - `email` (строка, обязательный) - электронная почта клиента
  - `phone` (строка, обязательный) - телефон клиента
- **Ответ в случае успеха**:
  ```json
  {
    "id": 1,
    "firstName": "John",
    "lastName": "Doe",
    "address": "Belarus, Minsk"
    "email": "john.doe@example.com",
    "phone": "+123456789"
  }
  ```
- **Ответ в случае, если запись не найдена**:
  ```json
  {
    "status": 404,
    "error": "Not Found"
  }
  ```

## 6. Удаление записи клиента по идентификатору
- **Описание**: Этот эндпоинт позволяет удалить запись клиента по его идентификатору.
- **Путь**: `DELETE /api/v1/customers/{id}`
- **Параметры**:
  - `id` (число, обязательный) - идентификатор клиента
- **Ответ в случае успеха**:
  ```json
  {
    "status": 204,
    "message": "No Content"
  }
  ```
- **Ответ в случае, если запись не найдена**:
  ```json
  {
    "status": 404,
    "error": "Not Found"
  }
  ```